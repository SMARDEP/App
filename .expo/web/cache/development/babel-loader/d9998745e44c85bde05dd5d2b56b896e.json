{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\emanu\\\\Downloads\\\\vendor-app-v3.0 (1)\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from '@use-expo/font';\nimport { Asset } from \"expo-asset\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { enableScreens } from \"react-native-screens\";\nenableScreens();\nimport { Block, GalioProvider } from \"galio-framework\";\nimport config from \"./config\";\nimport Screens from \"./navigation/Screens\";\nimport { Images, articles, argonTheme } from \"./constants\";\nimport { SharedStateProvider } from \"./store/store\";\nimport 'expo-asset';\nimport OneSignal from 'react-native-onesignal';\nvar assetImages = [Images.Onboarding, Images.LogoOnboarding, Images.Logo, Images.Pro, Images.ArgonLogo, Images.iOSLogo, Images.androidLogo, Images.noData];\narticles.map(function (article) {\n  return assetImages.push(article.image);\n});\n\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nfunction myiOSPromptCallback(permission) {}\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this._loadResourcesAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Promise.all(_toConsumableArray(cacheImages(assetImages))));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._handleLoadingError = function (error) {\n      console.warn(error);\n    };\n\n    _this._handleFinishLoading = function () {\n      _this.setState({\n        isLoadingComplete: true\n      });\n    };\n\n    _this.onIds = _this.onIds.bind(_assertThisInitialized(_this));\n    OneSignal.setLogLevel(6, 0);\n    OneSignal.init(config.ONESIGNAL_APP_ID, {\n      kOSSettingsKeyAutoPrompt: false,\n      kOSSettingsKeyInAppLaunchURL: false,\n      kOSSettingsKeyInFocusDisplayOption: 2\n    });\n    OneSignal.inFocusDisplaying(2);\n    OneSignal.promptForPushNotificationsWithUserResponse(myiOSPromptCallback);\n    OneSignal.addEventListener('received', _this.onReceived);\n    OneSignal.addEventListener('opened', _this.onOpened);\n    OneSignal.addEventListener('ids', _this.onIds);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      OneSignal.removeEventListener('received', this.onReceived);\n      OneSignal.removeEventListener('opened', this.onOpened);\n      OneSignal.removeEventListener('ids', this.onIds);\n    }\n  }, {\n    key: \"setExternalUserId\",\n    value: function setExternalUserId(device) {\n      var userJSON, parsedUser;\n      return _regeneratorRuntime.async(function setExternalUserId$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('user', null));\n\n            case 2:\n              userJSON = _context2.sent;\n\n              if (userJSON !== null) {\n                parsedUser = JSON.parse(userJSON);\n                OneSignal.setExternalUserId(parsedUser.id + \"\", function (results) {\n                  console.log('Results of setting external user id');\n                  console.log(results);\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"onReceived\",\n    value: function onReceived(notification) {\n      console.log(\"Notification received: \", notification);\n    }\n  }, {\n    key: \"onOpened\",\n    value: function onOpened(openResult) {\n      console.log('Message: ', openResult.notification.payload.body);\n      console.log('Data: ', openResult.notification.payload.additionalData);\n      console.log('isActive: ', openResult.notification.isAppInFocus);\n      console.log('openResult: ', openResult);\n    }\n  }, {\n    key: \"onIds\",\n    value: function onIds(device) {\n      console.log('Device info: ', device);\n      this.setExternalUserId(device);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, React.createElement(GalioProvider, {\n        theme: argonTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, React.createElement(SharedStateProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, React.createElement(Block, {\n        flex: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, React.createElement(Screens, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/emanu/Downloads/vendor-app-v3.0 (1)/App.js"],"names":["StatusBar","React","useState","AppLoading","useFonts","Asset","NavigationContainer","AsyncStorage","enableScreens","Block","GalioProvider","config","Screens","Images","articles","argonTheme","SharedStateProvider","OneSignal","assetImages","Onboarding","LogoOnboarding","Logo","Pro","ArgonLogo","iOSLogo","androidLogo","noData","map","article","push","image","cacheImages","images","Image","prefetch","fromModule","downloadAsync","myiOSPromptCallback","permission","App","props","_loadResourcesAsync","Promise","all","_handleLoadingError","error","console","warn","_handleFinishLoading","setState","isLoadingComplete","onIds","bind","setLogLevel","init","ONESIGNAL_APP_ID","kOSSettingsKeyAutoPrompt","kOSSettingsKeyInAppLaunchURL","kOSSettingsKeyInFocusDisplayOption","inFocusDisplaying","promptForPushNotificationsWithUserResponse","addEventListener","onReceived","onOpened","removeEventListener","device","getItem","userJSON","parsedUser","JSON","parse","setExternalUserId","id","results","log","notification","openResult","payload","body","additionalData","isAppInFocus","Component"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from \"react\";\nimport { Image } from \"react-native\";\nimport { StyleSheet, Text, View } from 'react-native';\nimport { AppLoading } from \"expo\";\nimport { useFonts } from '@use-expo/font';\nimport { Asset } from \"expo-asset\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Before rendering any navigation stack\nimport { enableScreens } from \"react-native-screens\";\nenableScreens();\n\nimport { Block, GalioProvider } from \"galio-framework\";\n\nimport config from './config';\n\n\n//App Screens\nimport Screens from './navigation/Screens';\n\nimport { Images, articles, argonTheme } from './constants';\nimport { SharedStateProvider } from './store/store';\nimport 'expo-asset';\nimport OneSignal from 'react-native-onesignal'; // Import package from node modules\n\n\n\n// cache app images\nconst assetImages = [\n  Images.Onboarding,\n  Images.LogoOnboarding,\n  Images.Logo,\n  Images.Pro,\n  Images.ArgonLogo,\n  Images.iOSLogo,\n  Images.androidLogo,\n  Images.noData\n];\n\n// cache product images\narticles.map(article => assetImages.push(article.image));\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nfunction myiOSPromptCallback(permission){\n  // do something with permission value\n}\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onIds=this.onIds.bind(this);\n\n    //Remove this method to stop OneSignal Debugging \n    OneSignal.setLogLevel(6, 0);\n    \n    // Replace 'YOUR_ONESIGNAL_APP_ID' with your OneSignal App ID.\n    OneSignal.init(config.ONESIGNAL_APP_ID, {kOSSettingsKeyAutoPrompt : false, kOSSettingsKeyInAppLaunchURL: false, kOSSettingsKeyInFocusDisplayOption:2});\n    OneSignal.inFocusDisplaying(2); // Controls what should happen if a notification is received while the app is open. 2 means that the notification will go directly to the device's notification center.\n    \n    // The promptForPushNotifications function code will show the iOS push notification prompt. We recommend removing the following code and instead using an In-App Message to prompt for notification permission (See step below)\n    OneSignal.promptForPushNotificationsWithUserResponse(myiOSPromptCallback);\n\n    OneSignal.addEventListener('received', this.onReceived);\n    OneSignal.addEventListener('opened', this.onOpened);\n    OneSignal.addEventListener('ids', this.onIds);\n  }\n\n  componentWillUnmount() {\n    OneSignal.removeEventListener('received', this.onReceived);\n    OneSignal.removeEventListener('opened', this.onOpened);\n    OneSignal.removeEventListener('ids', this.onIds);\n  }\n\n  \n\n  //Set external user id\n  async setExternalUserId(device){\n   \n    var userJSON = await AsyncStorage.getItem('user',null);\n    if (userJSON !== null) {\n      var parsedUser=JSON.parse(userJSON)\n    //alert(parsedUser.id);\n\n      // OneSignal setExternalUserId\n      OneSignal.setExternalUserId(parsedUser.id+\"\", (results) => {\n        console.log('Results of setting external user id');\n        console.log(results);\n        //alert(JSON.stringify(results))\n    });\n\n     }\n    \n  }\n\n  onReceived(notification) {\n    console.log(\"Notification received: \", notification);\n  }\n\n  onOpened(openResult) {\n    console.log('Message: ', openResult.notification.payload.body);\n    console.log('Data: ', openResult.notification.payload.additionalData);\n    console.log('isActive: ', openResult.notification.isAppInFocus);\n    console.log('openResult: ', openResult);\n  }\n\n  onIds(device) {\n    console.log('Device info: ', device);\n    this.setExternalUserId(device);\n  }\n\n\n\n  render() {\n      return (\n        <NavigationContainer>\n          <GalioProvider theme={argonTheme}>\n            <SharedStateProvider>\n              <Block flex>\n                <Screens />\n              </Block>\n            </SharedStateProvider>\n          </GalioProvider>\n        </NavigationContainer>\n        \n      );\n    \n  }\n\n  _loadResourcesAsync = async () => {\n    return Promise.all([\n      ...cacheImages(assetImages),\n    ]);\n  };\n\n  _handleLoadingError = error => {\n    // In this case, you might want to report the error to your error\n    // reporting service, for example Sentry\n    console.warn(error);\n  };\n\n  _handleFinishLoading = () => {\n    this.setState({ isLoadingComplete: true });\n  };\n\n}"]},"metadata":{},"sourceType":"module"}