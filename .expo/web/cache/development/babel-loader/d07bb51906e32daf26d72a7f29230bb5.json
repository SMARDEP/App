{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\emanu\\\\Downloads\\\\vendor-app-v3.0 (1)\\\\screens\\\\Notifications.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Block, theme, Text } from \"galio-framework\";\nimport { Language } from \"../constants\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nimport API from \"./../services/api\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { LoadingIndicator } from 'react-native-expo-fancy-alerts';\nimport { NavigationEvents } from '@react-navigation/native';\nimport moment from \"moment\";\nimport config from \"./../config\";\n\nfunction Notifications(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notifications = _useState2[0],\n      setNotifications = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notificationsLoaded = _useState4[0],\n      setNotificationsLoaded = _useState4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var cardContainer = [styles.card, styles.shadow];\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    API.getNotifications(function (notificationsResponse) {\n      setNotifications(notificationsResponse);\n      setRefreshing(false);\n    });\n  }, [refreshing]);\n\n  function renderNotificationItem(item) {\n    return React.createElement(Block, {\n      row: true,\n      card: true,\n      flex: true,\n      style: cardContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, React.createElement(Block, {\n      flex: true,\n      space: \"between\",\n      style: styles.cardDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      style: styles.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, item.data.title), React.createElement(Text, {\n      bld: true,\n      style: styles.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, item.data.body), React.createElement(Text, {\n      muted: true,\n      style: styles.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, Language.created + \": \", moment(item.created_at).format(config.dateTimeFormat)))));\n  }\n\n  useEffect(function () {\n    API.getNotifications(function (notificationsResponse) {\n      setNotifications(notificationsResponse);\n      setNotificationsLoaded(true);\n    });\n  }, []);\n  return React.createElement(Block, {\n    flex: true,\n    center: true,\n    style: styles.home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    contentContainerStyle: styles.articles,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  }, React.createElement(Block, {\n    flex: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    muted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, notificationsLoaded && notifications.length == 0 ? Language.noNotifications : \"\"), notifications.map(function (item) {\n    return renderNotificationItem(item);\n  }))), React.createElement(LoadingIndicator, {\n    visible: !notificationsLoaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Notifications;\nvar styles = StyleSheet.create({\n  cartCheckout: {\n    backgroundColor: \"white\"\n  },\n  listStyle: {\n    padding: theme.SIZES.BASE\n  },\n  home: {\n    width: width\n  },\n  articles: {\n    width: width - theme.SIZES.BASE * 2,\n    paddingVertical: theme.SIZES.BASE\n  },\n  actionButtons: {\n    backgroundColor: '#DCDCDC',\n    paddingHorizontal: 16,\n    paddingTop: 10,\n    paddingBottom: 9.5,\n    borderRadius: 3,\n    shadowColor: \"rgba(0, 0, 0, 0.1)\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 1\n  },\n  card: {\n    backgroundColor: theme.COLORS.WHITE,\n    marginVertical: theme.SIZES.BASE,\n    borderWidth: 0,\n    minHeight: 114,\n    marginBottom: 16\n  },\n  cardTitle: {\n    flex: 1,\n    flexWrap: 'wrap',\n    paddingBottom: 6\n  },\n  cardDescription: {\n    padding: theme.SIZES.BASE / 2\n  },\n  imageContainer: {\n    borderRadius: 3,\n    elevation: 1,\n    overflow: 'hidden',\n    resizeMode: \"cover\"\n  },\n  image: {},\n  horizontalImage: {\n    height: 122,\n    width: 'auto'\n  },\n  horizontalStyles: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  verticalStyles: {\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  fullImage: {\n    height: 200\n  },\n  shadow: {\n    shadowColor: theme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 0.1,\n    elevation: 2\n  }\n});","map":{"version":3,"sources":["C:/Users/emanu/Downloads/vendor-app-v3.0 (1)/screens/Notifications.js"],"names":["React","useState","useEffect","useRef","Block","theme","Text","Language","Dimensions","get","width","API","TouchableOpacity","LoadingIndicator","NavigationEvents","moment","config","Notifications","navigation","notifications","setNotifications","notificationsLoaded","setNotificationsLoaded","refreshing","setRefreshing","cardContainer","styles","card","shadow","onRefresh","useCallback","getNotifications","notificationsResponse","renderNotificationItem","item","cardDescription","cardTitle","data","title","body","created","created_at","format","dateTimeFormat","home","articles","length","noNotifications","map","StyleSheet","create","cartCheckout","backgroundColor","listStyle","padding","SIZES","BASE","paddingVertical","actionButtons","paddingHorizontal","paddingTop","paddingBottom","borderRadius","shadowColor","shadowOffset","height","shadowRadius","shadowOpacity","COLORS","WHITE","marginVertical","borderWidth","minHeight","marginBottom","flex","flexWrap","imageContainer","elevation","overflow","resizeMode","image","horizontalImage","horizontalStyles","borderTopRightRadius","borderBottomRightRadius","verticalStyles","borderBottomLeftRadius","fullImage","BLACK"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef } from 'react';\nimport {\n  StyleSheet,\n  Dimensions,\n  ScrollView,\n  RefreshControl\n} from \"react-native\";\nimport { Block, theme, Text, } from \"galio-framework\";\nimport {Language } from \"../constants\";\nconst { width, } = Dimensions.get(\"screen\");\nimport API from './../services/api'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { LoadingIndicator } from 'react-native-expo-fancy-alerts';\nimport { NavigationEvents } from '@react-navigation/native';\nimport moment from \"moment\";\nimport config from \"./../config\";\n\nfunction Notifications({navigation}){\n    \n    const [notifications,setNotifications]=useState([]);\n    const [notificationsLoaded,setNotificationsLoaded]=useState(false);\n    const [refreshing, setRefreshing] = React.useState(false);\n    const cardContainer = [styles.card, styles.shadow];\n\n    const onRefresh = React.useCallback(() => {\n      setRefreshing(true);\n\n      API.getNotifications((notificationsResponse)=>{\n        setNotifications(notificationsResponse);\n        setRefreshing(false);\n      })\n    }, [refreshing]);\n\n\n    function renderNotificationItem(item){\n        return (\n        <Block row={true} card flex style={cardContainer}>\n          <TouchableOpacity>\n             <Block flex space=\"between\" style={styles.cardDescription}>\n                <Text bold style={styles.cardTitle}>{item.data.title}</Text>\n                <Text bld style={styles.cardTitle}>{item.data.body}</Text>\n                <Text muted  style={styles.cardTitle}>{Language.created+\": \"}{moment(item.created_at).format(config.dateTimeFormat)}</Text>\n            </Block>\n          </TouchableOpacity>\n           \n        </Block>)\n    }\n\n\n    useEffect(()=>{\n      API.getNotifications((notificationsResponse)=>{\n        setNotifications(notificationsResponse);\n        setNotificationsLoaded(true);\n      })\n  },[])\n\nreturn (\n    <Block flex center style={styles.home}>\n       <ScrollView\n            showsVerticalScrollIndicator={false}\n            contentContainerStyle={styles.articles}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n            >\n                <Block flex  >\n                    <Text muted>{notificationsLoaded&&notifications.length==0?Language.noNotifications:\"\"}</Text>\n                {\n                    notifications.map((item)=>{\n                        return renderNotificationItem(item)\n                    })\n                }\n                \n            </Block>\n        </ScrollView>\n        <LoadingIndicator  visible={!notificationsLoaded}/>\n    </Block>\n\n      \n    \n    \n)\n\n}\nexport default Notifications;\n\nconst styles = StyleSheet.create({\n    cartCheckout: {\n      backgroundColor:\"white\"\n      },\n      listStyle:{\n          padding:theme.SIZES.BASE,\n      },\n    home: {\n      width: width,    \n    },\n    articles: {\n      width: width - theme.SIZES.BASE * 2,\n      paddingVertical: theme.SIZES.BASE,\n    },\n    actionButtons:{\n  \n      //width: 100,\n      backgroundColor: '#DCDCDC',\n      paddingHorizontal: 16,\n      paddingTop: 10,\n      paddingBottom:9.5,\n      borderRadius: 3,\n      shadowColor: \"rgba(0, 0, 0, 0.1)\",\n      shadowOffset: { width: 0, height: 2 },\n      shadowRadius: 4,\n      shadowOpacity: 1,\n    \n    },\n    card: {\n      backgroundColor: theme.COLORS.WHITE,\n      marginVertical: theme.SIZES.BASE,\n      borderWidth: 0,\n      minHeight: 114,\n      marginBottom: 16\n    },\n    cardTitle: {\n      flex: 1,\n      flexWrap: 'wrap',\n      paddingBottom: 6\n    },\n    cardDescription: {\n      padding: theme.SIZES.BASE / 2\n    },\n    imageContainer: {\n      borderRadius: 3,\n      elevation: 1,\n      overflow: 'hidden',\n      resizeMode: \"cover\"\n    },\n    image: {\n      // borderRadius: 3,\n    },\n    horizontalImage: {\n      height: 122,\n      width: 'auto',\n    },\n    horizontalStyles: {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    verticalStyles: {\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    fullImage: {\n      height: 200\n    },\n    shadow: {\n      shadowColor: theme.COLORS.BLACK,\n      shadowOffset: { width: 0, height: 2 },\n      shadowRadius: 4,\n      shadowOpacity: 0.1,\n      elevation: 2,\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}