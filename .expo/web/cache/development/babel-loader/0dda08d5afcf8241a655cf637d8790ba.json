{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport APICaller from \"./api_callers\";\n\nexports.getDriverStatus = function _callee(callback) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          APICaller.authAPI('GET', 'driver/auth/data', {}, callback, function (error) {\n            alert(error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.setActiveStatus = function _callee2(status, callback) {\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          APICaller.authAPI('GET', \"driver/auth/\" + (status ? \"driveronline\" : \"drveroffline\"), {}, function (data) {\n            callback(data.working == 1);\n          }, function (error) {\n            alert(error);\n            callback(!status);\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getDriverOrders = function _callee3(callback, eCallback) {\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          APICaller.authAPI('GET', 'driver/orders', {}, callback, eCallback);\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getDriverOrder = function _callee4(id, callback, eCallback) {\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          APICaller.authAPI('GET', 'driver/orders/order/' + id, {}, callback, eCallback);\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getDriverEarnings = function _callee5(callback, eCallback) {\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          APICaller.authAPI('GET', 'driver/orders/earnings', {}, callback, eCallback);\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.updateDriverOrderLocation = function _callee6(id, lat, lng, callback, eCallback) {\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          APICaller.authAPI('GET', 'driver/orders/updateorderlocation/' + id + \"/\" + lat + \"/\" + lng, {}, callback, eCallback);\n\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/emanu/Downloads/vendor-app-v3.0 (1)/services/driver_api.js"],"names":["APICaller","exports","getDriverStatus","callback","authAPI","error","alert","setActiveStatus","status","data","working","getDriverOrders","eCallback","getDriverOrder","id","getDriverEarnings","updateDriverOrderLocation","lat","lng"],"mappings":";AAAA,OAAOA,SAAP;;AAOAC,OAAO,CAACC,eAAR,GAAwB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAmBH,UAAAA,SAAS,CAACI,OAAV,CAAkB,KAAlB,EAAwB,kBAAxB,EAA2C,EAA3C,EAA8CD,QAA9C,EAAuD,UAACE,KAAD,EAAS;AAACC,YAAAA,KAAK,CAACD,KAAD,CAAL;AAAa,WAA9E;;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AACAJ,OAAO,CAACM,eAAR,GAAwB,kBAAOC,MAAP,EAAcL,QAAd;AAAA;AAAA;AAAA;AAAA;AAA0BH,UAAAA,SAAS,CAACI,OAAV,CAAkB,KAAlB,EAAwB,kBAAgBI,MAAM,GAAC,cAAD,GAAgB,cAAtC,CAAxB,EAA8E,EAA9E,EAAiF,UAACC,IAAD,EAAQ;AAACN,YAAAA,QAAQ,CAACM,IAAI,CAACC,OAAL,IAAc,CAAf,CAAR;AAA0B,WAApH,EAAqH,UAACL,KAAD,EAAS;AAACC,YAAAA,KAAK,CAACD,KAAD,CAAL;AAAaF,YAAAA,QAAQ,CAAC,CAACK,MAAF,CAAR;AAAkB,WAA9J;;AAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQAP,OAAO,CAACU,eAAR,GAAwB,kBAAOR,QAAP,EAAgBS,SAAhB;AAAA;AAAA;AAAA;AAAA;AAA6BZ,UAAAA,SAAS,CAACI,OAAV,CAAkB,KAAlB,EAAwB,eAAxB,EAAwC,EAAxC,EAA2CD,QAA3C,EAAoDS,SAApD;;AAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AACAX,OAAO,CAACY,cAAR,GAAuB,kBAAOC,EAAP,EAAUX,QAAV,EAAmBS,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAgCZ,UAAAA,SAAS,CAACI,OAAV,CAAkB,KAAlB,EAAwB,yBAAuBU,EAA/C,EAAkD,EAAlD,EAAqDX,QAArD,EAA8DS,SAA9D;;AAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AACAX,OAAO,CAACc,iBAAR,GAA0B,kBAAOZ,QAAP,EAAgBS,SAAhB;AAAA;AAAA;AAAA;AAAA;AAA6BZ,UAAAA,SAAS,CAACI,OAAV,CAAkB,KAAlB,EAAwB,wBAAxB,EAAiD,EAAjD,EAAoDD,QAApD,EAA6DS,SAA7D;;AAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AACAX,OAAO,CAACe,yBAAR,GAAkC,kBAAOF,EAAP,EAAUG,GAAV,EAAcC,GAAd,EAAkBf,QAAlB,EAA2BS,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAwCZ,UAAAA,SAAS,CAACI,OAAV,CAAkB,KAAlB,EAAwB,uCAAqCU,EAArC,GAAwC,GAAxC,GAA4CG,GAA5C,GAAgD,GAAhD,GAAoDC,GAA5E,EAAgF,EAAhF,EAAmFf,QAAnF,EAA4FS,SAA5F;;AAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlC","sourcesContent":["import APICaller from './api_callers';\n\n/***\n * \n * AUTH \n * \n */\nexports.getDriverStatus=async (callback)=>{APICaller.authAPI('GET','driver/auth/data',{},callback,(error)=>{alert(error)})};\nexports.setActiveStatus=async (status,callback)=>{APICaller.authAPI('GET',\"driver/auth/\"+(status?\"driveronline\":\"drveroffline\"),{},(data)=>{callback(data.working==1)},(error)=>{alert(error);callback(!status)});};\n\n\n /***\n * \n * ORDERS \n * \n */\nexports.getDriverOrders=async (callback,eCallback)=>{APICaller.authAPI('GET','driver/orders',{},callback,eCallback)};\nexports.getDriverOrder=async (id,callback,eCallback)=>{APICaller.authAPI('GET','driver/orders/order/'+id,{},callback,eCallback)};\nexports.getDriverEarnings=async (callback,eCallback)=>{APICaller.authAPI('GET','driver/orders/earnings',{},callback,eCallback)};\nexports.updateDriverOrderLocation=async (id,lat,lng,callback,eCallback)=>{APICaller.authAPI('GET','driver/orders/updateorderlocation/'+id+\"/\"+lat+\"/\"+lng,{},callback,eCallback)};\n"]},"metadata":{},"sourceType":"module"}