{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport APICaller from \"./api_callers\";\nimport config from \"./../config\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction loginUser(email, password, callback) {\n  var link = 'client/auth/gettoken';\n\n  if (config.DRIVER_APP) {\n    link = 'driver/auth/gettoken';\n  }\n\n  if (config.VENDOR_APP) {\n    link = 'vendor/auth/gettoken';\n  }\n\n  APICaller.publicAPI('POST', link, {\n    email: email,\n    password: password\n  }, function (response) {\n    setSettings();\n    callback(response);\n  }, function (error) {\n    alert(error);\n  });\n}\n\nexports.loginUser = loginUser;\n\nfunction registerUser(name, email, password, phone, callback) {\n  var data = {\n    name: name,\n    email: email,\n    password: password,\n    phone: phone,\n    app_secret: config.APP_SECRET\n  };\n  var link = 'client/auth/register';\n\n  if (config.DRIVER_APP) {\n    link = 'driver/auth/register';\n  }\n\n  if (config.VENDOR_APP) {\n    link = 'vendor/auth/register';\n    data.vendor_name = name;\n  }\n\n  APICaller.publicAPI('POST', link, data, function (response) {\n    setSettings();\n    callback(response);\n  }, function (error) {\n    alert(error);\n  });\n}\n\nexports.registerUser = registerUser;\n\nfunction setSettings() {\n  return _regeneratorRuntime.async(function setSettings$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          APICaller.authAPI('GET', 'client/settings', {}, function _callee(response) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(AsyncStorage.setItem('settings', JSON.stringify(response)));\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }, function (error) {\n            alert(error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.getNotifications = function _callee2(callback) {\n  return _regeneratorRuntime.async(function _callee2$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          APICaller.authAPI('GET', 'client/notifications', {}, callback, function (error) {\n            alert(error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.updateOrderStatus = function _callee3(order_id, status_slug, comment, callback) {\n  var statuses, mode;\n  return _regeneratorRuntime.async(function _callee3$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          statuses = {\n            \"just_created\": \"1\",\n            \"accepted_by_admin\": \"2\",\n            \"accepted_by_restaurant\": \"3\",\n            \"assigned_to_driver\": \"4\",\n            \"prepared\": \"5\",\n            \"picked_up\": \"6\",\n            \"delivered\": \"7\",\n            \"rejected_by_admin\": \"8\",\n            \"rejected_by_restaurant\": \"9\",\n            \"updated\": \"10\",\n            \"closed\": \"11\",\n            \"rejected_by_driver\": \"12\",\n            \"accepted_by_driver\": \"13\"\n          };\n          mode = config.DRIVER_APP ? \"driver\" : \"vendor\";\n          APICaller.authAPI('GET', mode + '/orders/updateorderstatus/' + order_id + \"/\" + statuses[status_slug], {\n            \"comment\": comment\n          }, callback, function (error) {\n            alert(error);\n          });\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/emanu/Downloads/vendor-app-v3.0 (1)/services/common_api.js"],"names":["APICaller","config","AsyncStorage","loginUser","email","password","callback","link","DRIVER_APP","VENDOR_APP","publicAPI","response","setSettings","error","alert","exports","registerUser","name","phone","data","app_secret","APP_SECRET","vendor_name","authAPI","setItem","JSON","stringify","getNotifications","updateOrderStatus","order_id","status_slug","comment","statuses","mode"],"mappings":"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","sourcesContent":["import APICaller from './api_callers';\nimport config from \"./../config\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n/**\n * Login user\n * @param {*} email \n * @param {*} password \n * @param {*} callback \n */\nfunction loginUser(email,password,callback){\n    var link='client/auth/gettoken';\n    if(config.DRIVER_APP){\n      link='driver/auth/gettoken';\n    }\n    if(config.VENDOR_APP){\n      link='vendor/auth/gettoken';\n    }\n    APICaller.publicAPI('POST',link,{\n        email:email,\n        password:password\n       },(response)=>{\n        setSettings();\n        callback(response)\n    },(error)=>{alert(error)});\n   }\nexports.loginUser=loginUser;\n\n/**\n * Register user / vendor account\n * @param {*} name \n * @param {*} email \n * @param {*} password \n * @param {*} phone \n * @param {*} callback \n */\nfunction registerUser(name,email,password,phone,callback){\n    const data = { \n      name: name,\n      email:email,\n      password:password,\n      phone:phone,\n      app_secret:config.APP_SECRET,\n    };\n  \n    var link='client/auth/register';\n    if(config.DRIVER_APP){\n      link='driver/auth/register';\n    }\n    if(config.VENDOR_APP){\n      link='vendor/auth/register';\n      data.vendor_name=name;\n    }\n    APICaller.publicAPI('POST',link,data,(response)=>{\n        setSettings();\n        callback(response)\n    },(error)=>{alert(error)})\n  \n}\nexports.registerUser=registerUser;\n\n/**\n * Set setting\n */\nasync function setSettings(){\n    APICaller.authAPI('GET','client/settings',{},async (response)=>{\n      await AsyncStorage.setItem('settings',JSON.stringify(response));\n    },(error)=>{alert(error)})\n}\n\n/**\n * getNotifications\n * @param {*} callback \n */\nexports.getNotifications=async (callback)=>{APICaller.authAPI('GET','client/notifications',{},callback,(error)=>{alert(error)})}\n   \n\n/**\n * Update orders status\n * @param {*} order_id \n * @param {*} status_slug \n * @param {*} comment \n * @param {*} callback \n */\nexports.updateOrderStatus=async (order_id,status_slug,comment,callback)=>{\n    var statuses={\n        \"just_created\":\"1\",\n        \"accepted_by_admin\":\"2\",\n        \"accepted_by_restaurant\":\"3\",\n        \"assigned_to_driver\":\"4\",\n        \"prepared\":\"5\",\n        \"picked_up\":\"6\",\n        \"delivered\":\"7\",\n        \"rejected_by_admin\":\"8\",\n        \"rejected_by_restaurant\":\"9\",\n        \"updated\":\"10\",\n        \"closed\":\"11\",\n        \"rejected_by_driver\":\"12\",\n        \"accepted_by_driver\":\"13\"\n    }\n    var mode=config.DRIVER_APP?\"driver\":\"vendor\";\n    APICaller.authAPI('GET',mode+'/orders/updateorderstatus/'+order_id+\"/\"+statuses[status_slug],{\"comment\":comment},callback,(error)=>{alert(error)})\n};\n"]},"metadata":{},"sourceType":"module"}