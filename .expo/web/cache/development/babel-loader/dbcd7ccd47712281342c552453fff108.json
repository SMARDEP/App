{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\emanu\\\\Downloads\\\\vendor-app-v3.0 (1)\\\\navigation\\\\Screens.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AuthContext from \"./../store/auth\";\nimport API from \"./../services/api\";\nimport User from \"./../services/user\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { Language } from \"../constants\";\nimport config from \"../config\";\nimport PublicAppStack from \"./VendorStacks/PublicAppStack\";\nimport AuthenticatedAppStack from \"./VendorStacks/AuthenticatedAppStack\";\nvar Stack = createStackNavigator();\nexport default function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useReducer = React.useReducer(function (prevState, action) {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'SIGN_IN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: false,\n          userToken: action.token\n        });\n\n      case 'SIGN_OUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: true,\n          userToken: null\n        });\n    }\n  }, {\n    isLoading: true,\n    isSignout: false,\n    userToken: null\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    var bootstrapAsync = function bootstrapAsync() {\n      var userToken;\n      return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config.DRIVER_APP = false;\n              config.VENDOR_APP = true;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n            case 5:\n              userToken = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 10:\n              dispatch({\n                type: 'RESTORE_TOKEN',\n                token: userToken\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 8]], Promise);\n    };\n\n    bootstrapAsync();\n  }, []);\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(data) {\n        return _regeneratorRuntime.async(function signIn$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                API.loginUser(data.email, data.password, function (responseJson) {\n                  console.log(JSON.stringify(responseJson));\n\n                  if (responseJson.status) {\n                    User.setLoggedInUser(responseJson, function () {\n                      data.toastok.current.show(Language.userIsNowLoggedIn, 2000, function () {\n                        dispatch({\n                          type: 'SIGN_IN',\n                          token: responseJson.token\n                        });\n                      });\n                    });\n                  } else {\n                    data.toasterror.current.show(responseJson.message ? responseJson.message : responseJson.errMsg, 2000, function () {});\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signOut: function signOut(data) {\n        return _regeneratorRuntime.async(function signOut$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                User.logout(function () {\n                  dispatch({\n                    type: 'SIGN_OUT'\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signUp: function signUp(data) {\n        return _regeneratorRuntime.async(function signUp$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                API.registerUser(data.name, data.email, data.password, data.phone, function (responseJson) {\n                  console.log(JSON.stringify(responseJson));\n\n                  if (responseJson.status) {\n                    User.logout(function () {\n                      dispatch({\n                        type: 'SIGN_OUT'\n                      });\n                      data.toasterror.current.show(Language.VendorCreated, 2000, function () {});\n                    });\n                  } else {\n                    data.toasterror.current.show(JSON.stringify(responseJson.errMsg), 2000, function () {});\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"App\",\n    options: {},\n    component: state.userToken == null ? PublicAppStack : AuthenticatedAppStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/emanu/Downloads/vendor-app-v3.0 (1)/navigation/Screens.js"],"names":["React","useState","AsyncStorage","AuthContext","API","User","createStackNavigator","createDrawerNavigator","Language","config","PublicAppStack","AuthenticatedAppStack","Stack","App","navigation","useReducer","prevState","action","type","userToken","token","isLoading","isSignout","state","dispatch","useEffect","bootstrapAsync","DRIVER_APP","VENDOR_APP","getItem","authContext","useMemo","signIn","data","loginUser","email","password","responseJson","console","log","JSON","stringify","status","setLoggedInUser","toastok","current","show","userIsNowLoggedIn","toasterror","message","errMsg","signOut","logout","signUp","registerUser","name","phone","VendorCreated","headerShown"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Easing, Animated} from \"react-native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AuthContext from './../store/auth'\nimport API from \"./../services/api\"\nimport User from './../services/user';\n\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\n\nimport { Language } from '../constants'\nimport config from '../config';\n\n//Stacks\nimport PublicAppStack from './VendorStacks/PublicAppStack';\nimport AuthenticatedAppStack from './VendorStacks/AuthenticatedAppStack';\n\nconst Stack = createStackNavigator();\n\n\nexport default function App({ navigation }) {\n  const [state, dispatch] = React.useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case 'RESTORE_TOKEN':\n          return {\n            ...prevState,\n            userToken: action.token,\n            isLoading: false,\n          };\n        case 'SIGN_IN':\n          return {\n            ...prevState,\n            isSignout: false,\n            userToken: action.token,\n          };\n        case 'SIGN_OUT':\n          return {\n            ...prevState,\n            isSignout: true,\n            userToken: null,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignout: false,\n      userToken: null,\n    }\n  );\n\n  React.useEffect(() => {\n    // Fetch the token from storage then navigate to our appropriate place\n    const bootstrapAsync = async () => {\n      let userToken;\n      config.DRIVER_APP=false;\n      config.VENDOR_APP=true;\n\n      try {\n        userToken = await AsyncStorage.getItem('token');\n      } catch (e) {\n        // Restoring token failed\n      }\n\n      // After restoring token, we may need to validate it in production apps\n\n      // This will switch to the App screen or Auth screen and this loading\n      // screen will be unmounted and thrown away.\n      dispatch({ type: 'RESTORE_TOKEN', token: userToken });\n    };\n\n    bootstrapAsync();\n  }, []);\n\n  const authContext = React.useMemo(\n    () => ({\n      signIn: async data => {\n        API.loginUser(data.email,data.password,(responseJson)=>{\n          console.log(JSON.stringify(responseJson));\n           if(responseJson.status){\n             //User ok\n             User.setLoggedInUser(responseJson,()=>{\n              data.toastok.current.show(Language.userIsNowLoggedIn, 2000, () => {\n                dispatch({ type: 'SIGN_IN', token: responseJson.token });\n              });\n              \n             })\n           }else{\n             //Not ok\n             data.toasterror.current.show(responseJson.message?responseJson.message:responseJson.errMsg, 2000, () => {});\n           }\n         });\n      },\n      signOut: async data => {\n        User.logout(()=>{\n          dispatch({ type: 'SIGN_OUT' })\n        })\n      },\n      signUp: async data => {\n        API.registerUser(data.name,data.email,data.password,data.phone,(responseJson)=>{\n          console.log(JSON.stringify(responseJson));\n           if(responseJson.status){\n              //User ok - but needs admin approval\n              User.logout(()=>{\n                dispatch({ type: 'SIGN_OUT' })\n                data.toasterror.current.show(Language.VendorCreated, 2000, () => {});\n              })\n              \n              \n               \n           }else{\n             //Not ok\n             data.toasterror.current.show(JSON.stringify(responseJson.errMsg), 2000, () => {});\n           }\n           \n           \n         });\n\n\n        \n      },\n    }),\n    []\n  );\n\n\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <Stack.Navigator screenOptions={{headerShown: false}}>\n        <Stack.Screen name=\"App\" options={{}} component={state.userToken == null ? PublicAppStack : AuthenticatedAppStack} />\n      </Stack.Navigator>\n    </AuthContext.Provider>\n  );\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}