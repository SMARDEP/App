{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\emanu\\\\Downloads\\\\vendor-app-v3.0 (1)\\\\navigation\\\\VendorStacks\\\\AuthenticatedAppStack.js\";\nimport React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport CustomDrawerContent from \"./../Menu\";\nimport OrdersStack from \"./../CommonStacks/OrdersStack\";\nimport NotificationsStack from \"./../CommonStacks/NotificationsStack\";\nimport ProfileStack from \"./../CommonStacks/ProfileStack\";\nimport EarningsStack from \"./../CommonStacks/EarningsStacks\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar Drawer = createDrawerNavigator();\nexport default function PublicAppStack(props) {\n  var _this = this;\n\n  return React.createElement(Drawer.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    style: {\n      flex: 1\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        screens: [{\n          \"title\": \"Orders\",\n          'link': \"Orders\"\n        }, {\n          \"title\": \"Earnings\",\n          'link': \"Earnings\"\n        }, {\n          \"title\": \"Notifications\",\n          'link': \"Notifications\"\n        }, {\n          \"title\": Language.profile,\n          'link': \"Profile\"\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }\n      }));\n    },\n    drawerStyle: {\n      backgroundColor: \"white\",\n      width: width * 0.8\n    },\n    drawerContentOption: {\n      activeTintcolor: \"white\",\n      inactiveTintColor: \"#000\",\n      activeBackgroundColor: \"transparent\",\n      itemStyle: {\n        width: width * 0.75,\n        backgroundColor: \"transparent\",\n        paddingVertical: 16,\n        paddingHorizonal: 12,\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        overflow: \"hidden\"\n      },\n      labelStyle: {\n        fontSize: 18,\n        marginLeft: 12,\n        fontWeight: \"normal\"\n      }\n    },\n    initialRouteName: \"Orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Orders\",\n    component: OrdersStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Notifications\",\n    component: NotificationsStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Earnings\",\n    component: EarningsStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/emanu/Downloads/vendor-app-v3.0 (1)/navigation/VendorStacks/AuthenticatedAppStack.js"],"names":["React","createDrawerNavigator","CustomDrawerContent","OrdersStack","NotificationsStack","ProfileStack","EarningsStack","Dimensions","get","width","Drawer","PublicAppStack","props","headerShown","flex","Language","profile","backgroundColor","activeTintcolor","inactiveTintColor","activeBackgroundColor","itemStyle","paddingVertical","paddingHorizonal","justifyContent","alignContent","alignItems","overflow","labelStyle","fontSize","marginLeft","fontWeight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,0BAAtC;;;;AAKA,OAAOC,mBAAP;AAGA,OAAOC,WAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;;AAEA,sBAAkBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAlB;AAAA,IAAQC,KAAR,mBAAQA,KAAR;;AACA,IAAMC,MAAM,GAAGT,qBAAqB,EAApC;AAKA,eAAe,SAAUU,cAAV,CAAyBC,KAAzB,EAAgC;AAAA;;AAC3C,SACE,oBAAC,MAAD,CAAQ,SAAR;AACE,IAAA,aAAa,EAAE;AAACC,MAAAA,WAAW,EAAE;AAAd,KADjB;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAFT;AAGE,IAAA,aAAa,EAAE,uBAAAF,KAAK;AAAA,aAAI,oBAAC,mBAAD,eAAyBA,KAAzB;AAAgC,QAAA,OAAO,EAAE,CAC/D;AAAC,mBAAQ,QAAT;AAAkB,kBAAO;AAAzB,SAD+D,EAE/D;AAAC,mBAAQ,UAAT;AAAoB,kBAAO;AAA3B,SAF+D,EAG/D;AAAC,mBAAQ,eAAT;AAAyB,kBAAO;AAAhC,SAH+D,EAI/D;AAAC,mBAAQG,QAAQ,CAACC,OAAlB;AAA0B,kBAAO;AAAjC,SAJ+D,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KAHtB;AASE,IAAA,WAAW,EAAE;AACXC,MAAAA,eAAe,EAAE,OADN;AAEXR,MAAAA,KAAK,EAAEA,KAAK,GAAG;AAFJ,KATf;AAaE,IAAA,mBAAmB,EAAE;AACnBS,MAAAA,eAAe,EAAE,OADE;AAEnBC,MAAAA,iBAAiB,EAAE,MAFA;AAGnBC,MAAAA,qBAAqB,EAAE,aAHJ;AAInBC,MAAAA,SAAS,EAAE;AACTZ,QAAAA,KAAK,EAAEA,KAAK,GAAG,IADN;AAETQ,QAAAA,eAAe,EAAE,aAFR;AAGTK,QAAAA,eAAe,EAAE,EAHR;AAITC,QAAAA,gBAAgB,EAAE,EAJT;AAKTC,QAAAA,cAAc,EAAE,QALP;AAMTC,QAAAA,YAAY,EAAE,QANL;AAOTC,QAAAA,UAAU,EAAE,QAPH;AAQTC,QAAAA,QAAQ,EAAE;AARD,OAJQ;AAcnBC,MAAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAE,EADA;AAEVC,QAAAA,UAAU,EAAE,EAFF;AAGVC,QAAAA,UAAU,EAAE;AAHF;AAdO,KAbvB;AAiCE,IAAA,gBAAgB,EAAC,QAjCnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmCE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,SAAS,EAAE5B,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,EAoCE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,eAApB;AAAoC,IAAA,SAAS,EAAEC,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,EAqCE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,UAApB;AAA+B,IAAA,SAAS,EAAEE,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,EAsCE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAED,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCF,CADF;AA0CD","sourcesContent":["import React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { Easing, Animated, Dimensions } from \"react-native\";\n\n\n// drawer\nimport CustomDrawerContent from \"./../Menu\";\n\n//Stacks\nimport OrdersStack from \"./../CommonStacks/OrdersStack\"\nimport NotificationsStack from \"./../CommonStacks/NotificationsStack\"\nimport ProfileStack from \"./../CommonStacks/ProfileStack\"\nimport EarningsStack from \"./../CommonStacks/EarningsStacks\"\n\nconst { width } = Dimensions.get(\"screen\");\nconst Drawer = createDrawerNavigator();\n\n\n\n\nexport default function  PublicAppStack(props) {\n    return (\n      <Drawer.Navigator\n        screenOptions={{headerShown: false}}\n        style={{ flex: 1 }}\n        drawerContent={props => <CustomDrawerContent {...props} screens={[\n          {\"title\":\"Orders\",'link':\"Orders\"},\n          {\"title\":\"Earnings\",'link':\"Earnings\"},\n          {\"title\":\"Notifications\",'link':\"Notifications\"},\n          {\"title\":Language.profile,'link':\"Profile\"},\n        ]} />}\n        drawerStyle={{\n          backgroundColor: \"white\",\n          width: width * 0.8\n        }}\n        drawerContentOption={{\n          activeTintcolor: \"white\",\n          inactiveTintColor: \"#000\",\n          activeBackgroundColor: \"transparent\",\n          itemStyle: {\n            width: width * 0.75,\n            backgroundColor: \"transparent\",\n            paddingVertical: 16,\n            paddingHorizonal: 12,\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\",\n            overflow: \"hidden\"\n          },\n          labelStyle: {\n            fontSize: 18,\n            marginLeft: 12,\n            fontWeight: \"normal\"\n          }\n        }}\n        initialRouteName=\"Orders\"\n      >\n        <Drawer.Screen name=\"Orders\" component={OrdersStack} />\n        <Drawer.Screen name=\"Notifications\" component={NotificationsStack} />\n        <Drawer.Screen name=\"Earnings\" component={EarningsStack} />\n        <Drawer.Screen name=\"Profile\" component={ProfileStack} />\n      </Drawer.Navigator>\n    );\n  }"]},"metadata":{},"sourceType":"module"}