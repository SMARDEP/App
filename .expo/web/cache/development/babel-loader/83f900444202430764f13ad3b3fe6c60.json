{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport invariant from 'invariant';\nvar RNOneSignal = NativeModules.OneSignal;\nvar OS_REMOTE_NOTIFICATION_RECEIVED = 'OneSignal-remoteNotificationReceived';\nvar OS_REMOTE_NOTIFICATION_OPENED = 'OneSignal-remoteNotificationOpened';\nvar OS_IDS_AVAILABLE = 'OneSignal-idsAvailable';\nvar OS_EMAIL_SUBSCRIPTION = 'OneSignal-emailSubscription';\nvar OS_IN_APP_MESSAGE_CLICKED = 'OneSignal-inAppMessageClicked';\nvar _eventBroadcastNames = [OS_REMOTE_NOTIFICATION_RECEIVED, OS_REMOTE_NOTIFICATION_OPENED, OS_IDS_AVAILABLE, OS_EMAIL_SUBSCRIPTION, OS_IN_APP_MESSAGE_CLICKED];\nvar NOTIFICATION_RECEIVED_EVENT = \"received\";\nvar NOTIFICATION_OPENED_EVENT = \"opened\";\nvar IDS_AVAILABLE_EVENT = \"ids\";\nvar EMAIL_SUBSCRIPTION_EVENT = \"emailSubscription\";\nvar IN_APP_MESSAGE_CLICKED_EVENT = \"inAppMessageClicked\";\nvar _eventNames = [NOTIFICATION_RECEIVED_EVENT, NOTIFICATION_OPENED_EVENT, IDS_AVAILABLE_EVENT, EMAIL_SUBSCRIPTION_EVENT, IN_APP_MESSAGE_CLICKED_EVENT];\nvar oneSignalEventEmitter;\n\nvar _eventTypeHandler = new Map();\n\nvar _notificationCache = new Map();\n\nvar _listeners = [];\n\nif (RNOneSignal != null) {\n  oneSignalEventEmitter = new NativeEventEmitter(RNOneSignal);\n\n  for (var i = 0; i < _eventBroadcastNames.length; i++) {\n    var eventBroadcastName = _eventBroadcastNames[i];\n    var eventName = _eventNames[i];\n    _listeners[eventName] = handleEventBroadcast(eventName, eventBroadcastName);\n  }\n}\n\nfunction handleEventBroadcast(type, broadcast) {\n  return oneSignalEventEmitter.addListener(broadcast, function (notification) {\n    var handler = _eventTypeHandler.get(type);\n\n    if (handler) {\n      handler(notification);\n    } else {\n      _notificationCache.set(type, notification);\n    }\n  });\n}\n\nfunction checkIfInitialized() {\n  return RNOneSignal != null;\n}\n\nvar OneSignal = function () {\n  function OneSignal() {\n    _classCallCheck(this, OneSignal);\n  }\n\n  _createClass(OneSignal, null, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, handler) {\n      if (!checkIfInitialized()) return;\n      invariant(type === NOTIFICATION_RECEIVED_EVENT || type === NOTIFICATION_OPENED_EVENT || type === IDS_AVAILABLE_EVENT || type === EMAIL_SUBSCRIPTION_EVENT || type === IN_APP_MESSAGE_CLICKED_EVENT, 'OneSignal only supports received, opened, ids, emailSubscription, and inAppMessageClicked events');\n\n      _eventTypeHandler.set(type, handler);\n\n      if (type === NOTIFICATION_OPENED_EVENT) {\n        RNOneSignal.initNotificationOpenedHandlerParams();\n      }\n\n      if (type === IDS_AVAILABLE_EVENT) {\n        RNOneSignal.idsAvailable();\n      }\n\n      if (type === IN_APP_MESSAGE_CLICKED_EVENT) {\n        if (Platform.OS === 'android') {\n          RNOneSignal.initInAppMessageClickHandlerParams();\n        } else if (Platform.OS === 'ios') {\n          RNOneSignal.setInAppMessageClickHandler();\n        }\n      }\n\n      var cache = _notificationCache.get(type);\n\n      if (handler && cache) {\n        handler(cache);\n\n        _notificationCache.delete(type);\n      }\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type) {\n      if (!checkIfInitialized()) return;\n      invariant(type === NOTIFICATION_RECEIVED_EVENT || type === NOTIFICATION_OPENED_EVENT || type === IDS_AVAILABLE_EVENT || type === EMAIL_SUBSCRIPTION_EVENT || type === IN_APP_MESSAGE_CLICKED_EVENT, 'OneSignal only supports received, opened, ids, emailSubscription, and inAppMessageClicked events');\n\n      _eventTypeHandler.delete(type);\n    }\n  }, {\n    key: \"clearListeners\",\n    value: function clearListeners() {\n      if (!checkIfInitialized()) return;\n\n      for (var i = 0; i < _eventNames.length; i++) {\n        _listeners[_eventNames].remove();\n      }\n    }\n  }, {\n    key: \"registerForPushNotifications\",\n    value: function registerForPushNotifications() {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'ios') {\n        RNOneSignal.registerForPushNotifications();\n      } else {\n        console.log(\"This function is not supported on Android\");\n      }\n    }\n  }, {\n    key: \"promptForPushNotificationsWithUserResponse\",\n    value: function promptForPushNotificationsWithUserResponse(callback) {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'ios') {\n        invariant(typeof callback === 'function', 'Must provide a valid callback');\n        RNOneSignal.promptForPushNotificationsWithUserResponse(callback);\n      } else {\n        console.log(\"This function is not supported on Android\");\n      }\n    }\n  }, {\n    key: \"requestPermissions\",\n    value: function requestPermissions(permissions) {\n      if (!checkIfInitialized()) return;\n      var requestedPermissions = {};\n\n      if (Platform.OS === 'ios') {\n        if (permissions) {\n          requestedPermissions = {\n            alert: !!permissions.alert,\n            badge: !!permissions.badge,\n            sound: !!permissions.sound\n          };\n        } else {\n          requestedPermissions = {\n            alert: true,\n            badge: true,\n            sound: true\n          };\n        }\n\n        RNOneSignal.requestPermissions(requestedPermissions);\n      } else {\n        console.log(\"This function is not supported on Android\");\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      console.warn(\"OneSignal: the `configure` method has been deprecated. The `ids` event is now triggered automatically.\");\n    }\n  }, {\n    key: \"init\",\n    value: function init(appId, iOSSettings) {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'ios') {\n        RNOneSignal.initWithAppId(appId, iOSSettings);\n      } else {\n        RNOneSignal.init(appId);\n      }\n    }\n  }, {\n    key: \"checkPermissions\",\n    value: function checkPermissions(callback) {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'ios') {\n        invariant(typeof callback === 'function', 'Must provide a valid callback');\n        RNOneSignal.checkPermissions(callback);\n      } else {\n        console.log(\"This function is not supported on Android\");\n      }\n    }\n  }, {\n    key: \"promptForPushNotificationPermissions\",\n    value: function promptForPushNotificationPermissions(callback) {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'ios') {\n        RNOneSignal.promptForPushNotificationPermissions(callback);\n      } else {\n        console.log('This function is not supported on Android');\n      }\n    }\n  }, {\n    key: \"getPermissionSubscriptionState\",\n    value: function getPermissionSubscriptionState(callback) {\n      if (!checkIfInitialized()) return;\n      invariant(typeof callback === 'function', 'Must provide a valid callback');\n      RNOneSignal.getPermissionSubscriptionState(callback);\n    }\n  }, {\n    key: \"sendTag\",\n    value: function sendTag(key, value) {\n      if (!checkIfInitialized()) return;\n\n      if (typeof value === \"boolean\") {\n        value = value.toString();\n      }\n\n      RNOneSignal.sendTag(key, value);\n    }\n  }, {\n    key: \"sendTags\",\n    value: function sendTags(tags) {\n      if (!checkIfInitialized()) return;\n      Object.keys(tags).forEach(function (key) {\n        if (typeof tags[key] === \"boolean\") {\n          tags[key] = tags[key].toString();\n        }\n      });\n      RNOneSignal.sendTags(tags || {});\n    }\n  }, {\n    key: \"getTags\",\n    value: function getTags(next) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.getTags(next);\n    }\n  }, {\n    key: \"deleteTag\",\n    value: function deleteTag(key) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.deleteTag(key);\n    }\n  }, {\n    key: \"enableVibrate\",\n    value: function enableVibrate(enable) {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'android') {\n        RNOneSignal.enableVibrate(enable);\n      } else {\n        console.log(\"This function is not supported on iOS\");\n      }\n    }\n  }, {\n    key: \"enableSound\",\n    value: function enableSound(enable) {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'android') {\n        RNOneSignal.enableSound(enable);\n      } else {\n        console.log(\"This function is not supported on iOS\");\n      }\n    }\n  }, {\n    key: \"setEmail\",\n    value: function setEmail(email, emailAuthCode, callback) {\n      if (!checkIfInitialized()) return;\n      if (emailAuthCode === undefined) emailAuthCode = null;\n      if (callback === undefined) callback = function callback() {};\n      RNOneSignal.setEmail(email, emailAuthCode, callback);\n    }\n  }, {\n    key: \"logoutEmail\",\n    value: function logoutEmail(callback) {\n      if (!checkIfInitialized()) return;\n      invariant(typeof callback === 'function', 'Must provide a valid callback');\n      RNOneSignal.logoutEmail(callback);\n    }\n  }, {\n    key: \"setLocationShared\",\n    value: function setLocationShared(shared) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.setLocationShared(shared);\n    }\n  }, {\n    key: \"setSubscription\",\n    value: function setSubscription(enable) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.setSubscription(enable);\n    }\n  }, {\n    key: \"promptLocation\",\n    value: function promptLocation() {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.promptLocation();\n    }\n  }, {\n    key: \"inFocusDisplaying\",\n    value: function inFocusDisplaying(displayOption) {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'android') {\n        RNOneSignal.inFocusDisplaying(displayOption);\n      } else {\n        RNOneSignal.setInFocusDisplayType(displayOption);\n      }\n    }\n  }, {\n    key: \"postNotification\",\n    value: function postNotification(contents, data, player_id, otherParameters) {\n      if (!checkIfInitialized()) return;\n      if (Platform.OS === 'android') RNOneSignal.postNotification(JSON.stringify(contents), JSON.stringify(data), JSON.stringify(player_id), JSON.stringify(otherParameters));else RNOneSignal.postNotification(contents, data, player_id, otherParameters);\n    }\n  }, {\n    key: \"clearOneSignalNotifications\",\n    value: function clearOneSignalNotifications() {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'android') {\n        RNOneSignal.clearOneSignalNotifications();\n      } else {\n        console.log(\"This function is not supported on iOS\");\n      }\n    }\n  }, {\n    key: \"cancelNotification\",\n    value: function cancelNotification(id) {\n      if (!checkIfInitialized()) return;\n\n      if (Platform.OS === 'android') {\n        RNOneSignal.cancelNotification(id);\n      } else {\n        console.log(\"This function is not supported on iOS\");\n      }\n    }\n  }, {\n    key: \"syncHashedEmail\",\n    value: function syncHashedEmail(email) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.syncHashedEmail(email);\n    }\n  }, {\n    key: \"setLogLevel\",\n    value: function setLogLevel(nsLogLevel, visualLogLevel) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.setLogLevel(nsLogLevel, visualLogLevel);\n    }\n  }, {\n    key: \"setRequiresUserPrivacyConsent\",\n    value: function setRequiresUserPrivacyConsent(required) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.setRequiresUserPrivacyConsent(required);\n    }\n  }, {\n    key: \"provideUserConsent\",\n    value: function provideUserConsent(granted) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.provideUserConsent(granted);\n    }\n  }, {\n    key: \"userProvidedPrivacyConsent\",\n    value: function userProvidedPrivacyConsent() {\n      if (!checkIfInitialized()) return;\n      return RNOneSignal.userProvidedPrivacyConsent();\n    }\n  }, {\n    key: \"setExternalUserId\",\n    value: function setExternalUserId(externalId, callback) {\n      if (!checkIfInitialized()) return;\n      if (callback === undefined) callback = function callback() {};\n      RNOneSignal.setExternalUserId(externalId, callback);\n    }\n  }, {\n    key: \"removeExternalUserId\",\n    value: function removeExternalUserId(callback) {\n      if (!checkIfInitialized()) return;\n      if (callback === undefined) callback = function callback() {};\n      RNOneSignal.removeExternalUserId(callback);\n    }\n  }, {\n    key: \"addTrigger\",\n    value: function addTrigger(key, value) {\n      if (!checkIfInitialized()) return;\n      var trigger = {};\n      trigger[key] = value;\n      RNOneSignal.addTriggers(trigger);\n    }\n  }, {\n    key: \"addTriggers\",\n    value: function addTriggers(triggers) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.addTriggers(triggers);\n    }\n  }, {\n    key: \"removeTriggersForKeys\",\n    value: function removeTriggersForKeys(keys) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.removeTriggersForKeys(keys);\n    }\n  }, {\n    key: \"removeTriggerForKey\",\n    value: function removeTriggerForKey(key) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.removeTriggerForKey(key);\n    }\n  }, {\n    key: \"getTriggerValueForKey\",\n    value: function getTriggerValueForKey(key) {\n      if (!checkIfInitialized()) return Promise.resolve();\n      return RNOneSignal.getTriggerValueForKey(key);\n    }\n  }, {\n    key: \"pauseInAppMessages\",\n    value: function pauseInAppMessages(pause) {\n      if (!checkIfInitialized()) return;\n      RNOneSignal.pauseInAppMessages(pause);\n    }\n  }, {\n    key: \"sendOutcome\",\n    value: function sendOutcome(name) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      if (!checkIfInitialized()) return;\n      invariant(typeof callback === 'function', 'Must provide a valid callback');\n      RNOneSignal.sendOutcome(name, callback);\n    }\n  }, {\n    key: \"sendUniqueOutcome\",\n    value: function sendUniqueOutcome(name) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      if (!checkIfInitialized()) return;\n      invariant(typeof callback === 'function', 'Must provide a valid callback');\n      RNOneSignal.sendUniqueOutcome(name, callback);\n    }\n  }, {\n    key: \"sendOutcomeWithValue\",\n    value: function sendOutcomeWithValue(name, value) {\n      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n      if (!checkIfInitialized()) return;\n      invariant(typeof callback === 'function', 'Must provide a valid callback');\n      RNOneSignal.sendOutcomeWithValue(name, Number(value), callback);\n    }\n  }]);\n\n  return OneSignal;\n}();\n\nexport { OneSignal as default };","map":{"version":3,"sources":["C:/Users/emanu/Downloads/vendor-app-v3.0 (1)/node_modules/react-native-onesignal/index.js"],"names":["invariant","RNOneSignal","NativeModules","OneSignal","OS_REMOTE_NOTIFICATION_RECEIVED","OS_REMOTE_NOTIFICATION_OPENED","OS_IDS_AVAILABLE","OS_EMAIL_SUBSCRIPTION","OS_IN_APP_MESSAGE_CLICKED","_eventBroadcastNames","NOTIFICATION_RECEIVED_EVENT","NOTIFICATION_OPENED_EVENT","IDS_AVAILABLE_EVENT","EMAIL_SUBSCRIPTION_EVENT","IN_APP_MESSAGE_CLICKED_EVENT","_eventNames","oneSignalEventEmitter","_eventTypeHandler","Map","_notificationCache","_listeners","NativeEventEmitter","i","length","eventBroadcastName","eventName","handleEventBroadcast","type","broadcast","addListener","notification","handler","get","set","checkIfInitialized","initNotificationOpenedHandlerParams","idsAvailable","Platform","OS","initInAppMessageClickHandlerParams","setInAppMessageClickHandler","cache","delete","remove","registerForPushNotifications","console","log","callback","promptForPushNotificationsWithUserResponse","permissions","requestedPermissions","alert","badge","sound","requestPermissions","warn","appId","iOSSettings","initWithAppId","init","checkPermissions","promptForPushNotificationPermissions","getPermissionSubscriptionState","key","value","toString","sendTag","tags","Object","keys","forEach","sendTags","next","getTags","deleteTag","enable","enableVibrate","enableSound","email","emailAuthCode","undefined","setEmail","logoutEmail","shared","setLocationShared","setSubscription","promptLocation","displayOption","inFocusDisplaying","setInFocusDisplayType","contents","data","player_id","otherParameters","postNotification","JSON","stringify","clearOneSignalNotifications","id","cancelNotification","syncHashedEmail","nsLogLevel","visualLogLevel","setLogLevel","required","setRequiresUserPrivacyConsent","granted","provideUserConsent","userProvidedPrivacyConsent","externalId","setExternalUserId","removeExternalUserId","trigger","addTriggers","triggers","removeTriggersForKeys","removeTriggerForKey","Promise","resolve","getTriggerValueForKey","pause","pauseInAppMessages","name","sendOutcome","sendUniqueOutcome","sendOutcomeWithValue","Number"],"mappings":"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","sourcesContent":["\n'use strict';\n\nimport { NativeModules, NativeEventEmitter, Platform } from 'react-native';\nimport invariant from 'invariant';\n\nconst RNOneSignal = NativeModules.OneSignal;\n\n\n/**\n 1.\n These events are used to broadcast events to native code\n */\nconst OS_REMOTE_NOTIFICATION_RECEIVED = 'OneSignal-remoteNotificationReceived';\nconst OS_REMOTE_NOTIFICATION_OPENED = 'OneSignal-remoteNotificationOpened';\nconst OS_IDS_AVAILABLE = 'OneSignal-idsAvailable';\n//const OS_SUBSCRIPTION = 'OneSignal-subscription';\n//const OS_PERMISSION = 'OneSignal-permission';\nconst OS_EMAIL_SUBSCRIPTION = 'OneSignal-emailSubscription';\nconst OS_IN_APP_MESSAGE_CLICKED = 'OneSignal-inAppMessageClicked';\n// Add more native broadcast strings here...\n\nconst _eventBroadcastNames = [\n    OS_REMOTE_NOTIFICATION_RECEIVED,\n    OS_REMOTE_NOTIFICATION_OPENED,\n    OS_IDS_AVAILABLE,\n//    OS_SUBSCRIPTION,\n//    OS_PERMISSION,\n    OS_EMAIL_SUBSCRIPTION,\n    OS_IN_APP_MESSAGE_CLICKED,\n    // Append new native broadcast strings here\n];\n\n/**\n 2.\n These events are used to interpret events from native code\n */\nconst NOTIFICATION_RECEIVED_EVENT = \"received\";\nconst NOTIFICATION_OPENED_EVENT = \"opened\";\nconst IDS_AVAILABLE_EVENT = \"ids\";\n//const SUBSCRIPTION_EVENT = \"subscription\";\n//const PERMISSION_EVENT = \"permission\";\nconst EMAIL_SUBSCRIPTION_EVENT = \"emailSubscription\";\nconst IN_APP_MESSAGE_CLICKED_EVENT = \"inAppMessageClicked\";\n// Add more JS string events here...\n\nconst _eventNames = [\n    NOTIFICATION_RECEIVED_EVENT,\n    NOTIFICATION_OPENED_EVENT,\n    IDS_AVAILABLE_EVENT,\n//    SUBSCRIPTION_EVENT,\n//    PERMISSION_EVENT,\n    EMAIL_SUBSCRIPTION_EVENT,\n    IN_APP_MESSAGE_CLICKED_EVENT,\n    // Append new JS string events here\n];\n\nvar oneSignalEventEmitter;\n\nvar _eventTypeHandler = new Map();\nvar _notificationCache = new Map();\nvar _listeners = [];\n\nif (RNOneSignal != null) {\n    oneSignalEventEmitter = new NativeEventEmitter(RNOneSignal);\n\n    for(var i = 0; i < _eventBroadcastNames.length; i++) {\n        var eventBroadcastName = _eventBroadcastNames[i];\n        var eventName = _eventNames[i];\n\n        _listeners[eventName] = handleEventBroadcast(eventName, eventBroadcastName)\n    }\n}\n\nfunction handleEventBroadcast(type, broadcast) {\n    return oneSignalEventEmitter.addListener(\n        broadcast, (notification) => {\n            // Check if we have added listener for this type yet\n            // Cache the result first if we have not.\n            var handler = _eventTypeHandler.get(type);\n\n            if (handler) {\n                handler(notification);\n            } else {\n                _notificationCache.set(type, notification);\n            }\n        }\n    );\n}\n\nfunction checkIfInitialized() {\n    return RNOneSignal != null;\n}\n\nexport default class OneSignal {\n\n    /**\n     Listen to events of received, opened, ids, subscription, permission, emailSubscription, inAppMessageClicked\n     TODO: We currently have implemented the steps up until connecting the \"SUBSCRIPTION_EVENT\" and \"PERMISSION_EVENT\"\n     Currently the getPermissionSubscriptionState is used to get all device information and\n        needs to be broken up into using the native observers to fire these React-Native handlers\n     */\n    static addEventListener(type, handler) {\n        if (!checkIfInitialized()) return;\n\n        invariant(\n            type === NOTIFICATION_RECEIVED_EVENT ||\n            type === NOTIFICATION_OPENED_EVENT ||\n            type === IDS_AVAILABLE_EVENT ||\n//            type === SUBSCRIPTION_EVENT ||\n//            type === PERMISSION_EVENT ||\n            type === EMAIL_SUBSCRIPTION_EVENT ||\n            type === IN_APP_MESSAGE_CLICKED_EVENT,\n            'OneSignal only supports received, opened, ids, emailSubscription, and inAppMessageClicked events'\n        );\n\n        _eventTypeHandler.set(type, handler);\n\n        // Make native request to init notification opened handler\n        if (type === NOTIFICATION_OPENED_EVENT) {\n            RNOneSignal.initNotificationOpenedHandlerParams();\n        }\n\n        // Make native request to init idsAvailable handler\n        if (type === IDS_AVAILABLE_EVENT) {\n            RNOneSignal.idsAvailable();\n        }\n\n        // Make native request to init IAM handler\n        if (type === IN_APP_MESSAGE_CLICKED_EVENT) {\n            if (Platform.OS === 'android') {\n                RNOneSignal.initInAppMessageClickHandlerParams();\n            } else if (Platform.OS === 'ios') {\n                RNOneSignal.setInAppMessageClickHandler();\n            }\n        }\n\n        // Check if there is a cache for this type of event\n        var cache = _notificationCache.get(type);\n        if (handler && cache) {\n            handler(cache);\n            _notificationCache.delete(type);\n        }\n    }\n\n    static removeEventListener(type) {\n        if (!checkIfInitialized()) return;\n\n        invariant(\n            type === NOTIFICATION_RECEIVED_EVENT ||\n            type === NOTIFICATION_OPENED_EVENT ||\n            type === IDS_AVAILABLE_EVENT ||\n//            type === SUBSCRIPTION_EVENT ||\n//            type === PERMISSION_EVENT ||\n            type === EMAIL_SUBSCRIPTION_EVENT ||\n            type === IN_APP_MESSAGE_CLICKED_EVENT,\n            'OneSignal only supports received, opened, ids, emailSubscription, and inAppMessageClicked events'\n        );\n\n        _eventTypeHandler.delete(type);\n    }\n\n    static clearListeners() {\n        if (!checkIfInitialized()) return;\n\n        for(var i = 0; i < _eventNames.length; i++) {\n            _listeners[_eventNames].remove();\n        }\n    }\n\n    static registerForPushNotifications() {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'ios') {\n            RNOneSignal.registerForPushNotifications();\n        } else {\n            console.log(\"This function is not supported on Android\");\n        }\n    }\n\n    static promptForPushNotificationsWithUserResponse(callback) {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'ios') {\n            invariant(\n                typeof callback === 'function',\n                'Must provide a valid callback'\n            );\n            RNOneSignal.promptForPushNotificationsWithUserResponse(callback);\n        } else {\n            console.log(\"This function is not supported on Android\");\n        }\n    }\n\n    static requestPermissions(permissions) {\n        if (!checkIfInitialized()) return;\n\n        var requestedPermissions = {};\n        if (Platform.OS === 'ios') {\n            if (permissions) {\n                requestedPermissions = {\n                    alert: !!permissions.alert,\n                    badge: !!permissions.badge,\n                    sound: !!permissions.sound\n                };\n            } else {\n                requestedPermissions = {\n                    alert: true,\n                    badge: true,\n                    sound: true\n                };\n            }\n            RNOneSignal.requestPermissions(requestedPermissions);\n        } else {\n            console.log(\"This function is not supported on Android\");\n        }\n    }\n\n    /* deprecated */\n    static configure() {\n        console.warn(\"OneSignal: the `configure` method has been deprecated. The `ids` event is now triggered automatically.\");\n    }\n\n    static init(appId, iOSSettings) {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'ios') {\n            RNOneSignal.initWithAppId(appId, iOSSettings);\n        } else {\n            RNOneSignal.init(appId);\n        }\n    }\n\n    static checkPermissions(callback) {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'ios') {\n            invariant(\n                typeof callback === 'function',\n                'Must provide a valid callback'\n            );\n            RNOneSignal.checkPermissions(callback);\n        } else {\n            console.log(\"This function is not supported on Android\");\n        }\n    }\n\n    static promptForPushNotificationPermissions(callback) {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'ios') {\n            RNOneSignal.promptForPushNotificationPermissions(callback);\n        } else {\n            console.log('This function is not supported on Android');\n        }\n    }\n\n    static getPermissionSubscriptionState(callback) {\n        if (!checkIfInitialized()) return;\n\n        invariant(\n            typeof callback === 'function',\n            'Must provide a valid callback'\n        );\n        RNOneSignal.getPermissionSubscriptionState(callback);\n    }\n\n    static sendTag(key, value) {\n        if (!checkIfInitialized()) return;\n\n        if (typeof value === \"boolean\") {\n            value = value.toString();\n        }\n\n        RNOneSignal.sendTag(key, value);\n    }\n\n    static sendTags(tags) {\n        if (!checkIfInitialized()) return;\n\n        Object.keys(tags).forEach((key)=>{\n            if (typeof tags[key] === \"boolean\"){\n                tags[key] = tags[key].toString();\n            }\n        })\n\n        RNOneSignal.sendTags(tags || {});\n    }\n\n    static getTags(next) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.getTags(next);\n    }\n\n    static deleteTag(key) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.deleteTag(key);\n    }\n\n    static enableVibrate(enable) {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'android') {\n            RNOneSignal.enableVibrate(enable);\n        } else {\n            console.log(\"This function is not supported on iOS\");\n        }\n    }\n\n    static enableSound(enable) {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'android') {\n            RNOneSignal.enableSound(enable);\n        } else {\n            console.log(\"This function is not supported on iOS\");\n        }\n    }\n\n    static setEmail(email, emailAuthCode, callback) {\n        if (!checkIfInitialized()) return;\n\n        if (emailAuthCode === undefined)\n            emailAuthCode = null;\n\n        if (callback === undefined)\n            callback = function(){};\n\n        RNOneSignal.setEmail(email, emailAuthCode, callback);\n    }\n\n    static logoutEmail(callback) {\n        if (!checkIfInitialized()) return;\n\n        invariant(\n            typeof callback === 'function',\n            'Must provide a valid callback'\n        );\n\n        RNOneSignal.logoutEmail(callback);\n    }\n\n    static setLocationShared(shared) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.setLocationShared(shared);\n    }\n\n    static setSubscription(enable) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.setSubscription(enable);\n    }\n\n    static promptLocation() {\n        if (!checkIfInitialized()) return;\n\n        //Supported in both iOS & Android\n        RNOneSignal.promptLocation();\n    }\n\n    static inFocusDisplaying(displayOption) {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'android') {\n            //Android: Set Display option of the notifications. displayOption is of type OSInFocusDisplayOption\n            // 0 -> None, 1 -> InAppAlert, 2 -> Notification\n            RNOneSignal.inFocusDisplaying(displayOption);\n        } else {\n            //iOS: displayOption is a number, 0 -> None, 1 -> InAppAlert, 2 -> Notification\n            RNOneSignal.setInFocusDisplayType(displayOption);\n        }\n    }\n\n    static postNotification(contents, data, player_id, otherParameters) {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'android')\n            RNOneSignal.postNotification(JSON.stringify(contents), JSON.stringify(data), JSON.stringify(player_id), JSON.stringify(otherParameters));\n        else\n            RNOneSignal.postNotification(contents, data, player_id, otherParameters);\n    }\n\n    static clearOneSignalNotifications() {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'android') {\n            RNOneSignal.clearOneSignalNotifications();\n        } else {\n            console.log(\"This function is not supported on iOS\");\n        }\n    }\n\n    static cancelNotification(id) {\n        if (!checkIfInitialized()) return;\n\n        if (Platform.OS === 'android') {\n            RNOneSignal.cancelNotification(id);\n        } else {\n            console.log(\"This function is not supported on iOS\");\n        }\n    }\n\n    //Sends MD5 and SHA1 hashes of the user's email address (https://documentation.onesignal.com/docs/ios-sdk-api#section-synchashedemail)\n    static syncHashedEmail(email) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.syncHashedEmail(email);\n    }\n\n    static setLogLevel(nsLogLevel, visualLogLevel) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.setLogLevel(nsLogLevel, visualLogLevel);\n    }\n\n    static setRequiresUserPrivacyConsent(required) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.setRequiresUserPrivacyConsent(required);\n    }\n\n    static provideUserConsent(granted) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.provideUserConsent(granted);\n    }\n\n    static userProvidedPrivacyConsent() {\n        if (!checkIfInitialized()) return;\n\n        //returns a promise\n        return RNOneSignal.userProvidedPrivacyConsent();\n    }\n\n    static setExternalUserId(externalId, callback) {\n        if (!checkIfInitialized()) return;\n\n        if (callback === undefined)\n            callback = function(){};\n\n        RNOneSignal.setExternalUserId(externalId, callback);\n    }\n\n    static removeExternalUserId(callback) {\n        if (!checkIfInitialized()) return;\n\n        if (callback === undefined)\n            callback = function(){};\n\n        RNOneSignal.removeExternalUserId(callback);\n    }\n\n    /**\n     * In-App Messaging\n     */\n\n    // Pass a String key and any value and creates a trigger map to pass to addTriggers()\n    static addTrigger(key, value) {\n        if (!checkIfInitialized()) return;\n\n        var trigger = {};\n        trigger[key] = value;\n        RNOneSignal.addTriggers(trigger);\n    }\n\n\n    // Expected format is Map<String, Object>, make sure all values are Objects and keys are Strings\n    static addTriggers(triggers) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.addTriggers(triggers);\n    }\n\n    static removeTriggersForKeys(keys) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.removeTriggersForKeys(keys);\n    }\n\n    static removeTriggerForKey(key) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.removeTriggerForKey(key);\n    }\n\n    static getTriggerValueForKey(key) {\n        // must return a promise\n        if (!checkIfInitialized()) return Promise.resolve();\n\n        return RNOneSignal.getTriggerValueForKey(key);\n    }\n\n    static pauseInAppMessages(pause) {\n        if (!checkIfInitialized()) return;\n\n        RNOneSignal.pauseInAppMessages(pause);\n    }\n\n    /**\n     * Outcomes\n     */\n\n    static sendOutcome(name, callback=function(){}) {\n        if (!checkIfInitialized()) return;\n\n        invariant(\n            typeof callback === 'function',\n            'Must provide a valid callback'\n        );\n\n        RNOneSignal.sendOutcome(name, callback);\n    }\n\n    static sendUniqueOutcome(name, callback=function(){}) {\n        if (!checkIfInitialized()) return;\n\n        invariant(\n            typeof callback === 'function',\n            'Must provide a valid callback'\n        );\n\n        RNOneSignal.sendUniqueOutcome(name, callback);\n    }\n\n    static sendOutcomeWithValue(name, value, callback=function(){}) {\n        if (!checkIfInitialized()) return;\n\n        invariant(\n            typeof callback === 'function',\n            'Must provide a valid callback'\n        );\n\n        RNOneSignal.sendOutcomeWithValue(name, Number(value), callback);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}